export var EditableListPart,f='editable-list';(function(a){a['Items']='items';a['AddButton']='add';a['ItemsSlot']='items-slot';a['EditButton']='edit';a['RemoveButton']='remove'})(EditableListPart||(EditableListPart={}));export var ButtonTemplatePart;(function(A){A['RemoveButton']='remove-button';A['EditButton']='edit-button'})(ButtonTemplatePart||(ButtonTemplatePart={}));var c=new Set(['style','template']);var d=`<div part="${EditableListPart.Items}"><slot part="${EditableListPart.ItemsSlot}"></slot></div>
<slot name="add"><button part="${EditableListPart.AddButton}" type="button">&plus;</button></slot>`;var e=new CSSStyleSheet();e.replaceSync(`
* { box-sizing: border-box; }
:host
{
    /* begin default ul styles */
    display: block;
    list-style-type: disc;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    padding-inline-start: 40px;
    /* end default ul styles */
}`);export class EditableListElement extends HTMLElement{canRemove=!0;canEdit=!1;#boundEventHandlers=new Map([['add',this.#addButton_onClick.bind(this)]]);componentParts=new Map();getPart(_){if(this.componentParts.get(_)==null){var b=this.shadowRoot.querySelector(`[part="${_}"]`);b!=null&&this.componentParts.set(_,b)}return this.componentParts.get(_)}findPart(B){return this.shadowRoot.querySelector(`[part="${B}"]`)}constructor(){super();this.attachShadow({mode:'open'});this.shadowRoot.innerHTML=d;this.shadowRoot.adoptedStyleSheets.push(e);this.findPart(EditableListPart.AddButton)?.addEventListener('click',this.#boundEventHandlers.get('add'));this.getPart(EditableListPart.ItemsSlot).addEventListener('slotchange',this.#updateItemButtons.bind(this))}static create(C){var _b=document.createElement(f);if(C==null)return _b;for(const[_a,D] of Object.entries(C))if(_a=='remove')(D==!1)?_b.setAttribute(_a,'false'):_b.removeAttribute(_a);else if(_a=='edit')(D==!0)?_b.setAttribute(_a,'true'):_b.removeAttribute(_a);else if(_a.startsWith('on')){var _c=_a.substring(2).toLowerCase();_b.addEventListener(_c,D)}return _b}#addButton_onClick(){this.dispatchEvent(new CustomEvent('add'))}#updateItemButtons(){var _A=this.getPart(EditableListPart.ItemsSlot).assignedElements();for(const[i,aA] of _A.entries()){if(c.has(aA.tagName.toLowerCase()))continue;else if(aA.tagName.toLowerCase()=='slot'){_A.push(...aA.assignedElements());continue}var _B=_A[i],_C=_A[i].querySelector(`button[part="${EditableListPart.EditButton}"]`);if(this.canEdit)if(_C==null){var _d=document.createElement('button');_d.type='button';_d.setAttribute('part','edit');var E=this.querySelector(`template[part="${ButtonTemplatePart.EditButton}"]`);E!=null?_d.append(E.content.cloneNode(!0)):_d.textContent='…';_d.addEventListener('click',aB=>{this.dispatchEvent(new CustomEvent('edit', {detail:_B}));if(this.hasAttribute('cancel-edit')){aB.preventDefault();aB.stopPropagation();return!1}});_B.appendChild(_d)}else _C.addEventListener('click',aC=>{this.dispatchEvent(new CustomEvent('edit', {detail:_B}));if(this.hasAttribute('cancel-edit')){aC.preventDefault();aC.stopPropagation();return!1}});else _C!=null&&_C.remove();var F=_A[i].querySelector(`button[part="${EditableListPart.RemoveButton}"]`);if(this.canRemove)if(F==null){var g=document.createElement('button');g.type='button';g.setAttribute('part','remove');const aD=this.querySelector(`template[part="${ButtonTemplatePart.RemoveButton}"]`);aD!=null?g.append(aD.content.cloneNode(!0)):g.textContent='×';g.addEventListener('click',aE=>{_B.remove();this.dispatchEvent(new CustomEvent('remove', {detail:_B}));if(this.hasAttribute('cancel-remove')){aE.preventDefault();aE.stopPropagation();return!1}});_B.appendChild(g)}else F.addEventListener('click',aF=>{_B.remove();this.dispatchEvent(new CustomEvent('remove', {detail:_B}));if(this.hasAttribute('cancel-remove')){aF.preventDefault();aF.stopPropagation();return!1}});else F!=null&&F.remove()}}static observedAttributes=['remove','edit'];attributeChangedCallback(aG,aH,aI){if(aG=='remove'){aI==null||aI.trim()=='true'?this.canRemove=!0:this.canRemove=!1;this.#updateItemButtons()}else if(aG=='edit'){aI==null||aI.trim()!='true'?this.canEdit=!1:this.canEdit=!0;this.#updateItemButtons()}}}function h(){customElements.get(f)==null&&customElements.define(f,EditableListElement)}export{h as register};h();
