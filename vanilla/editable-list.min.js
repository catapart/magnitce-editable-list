export var EditableListPart,f='editable-list';(function(a){a['Items']='items';a['AddButton']='add';a['ItemsSlot']='items-slot';a['EditButton']='edit';a['RemoveButton']='remove'})(EditableListPart||(EditableListPart={}));export var ButtonTemplatePart;(function(A){A['RemoveButton']='remove-button';A['EditButton']='edit-button'})(ButtonTemplatePart||(ButtonTemplatePart={}));var c=new Set(['style','template']);var d=`<div part="${EditableListPart.Items}"><slot part="${EditableListPart.ItemsSlot}"></slot></div>
<slot name="add"><button part="${EditableListPart.AddButton}" type="button">&plus;</button></slot>`;var e=new CSSStyleSheet();e.replaceSync(`
* { box-sizing: border-box; }
:host
{
    /* begin default ul styles */
    display: block;
    list-style-type: disc;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    padding-inline-start: 40px;
    /* end default ul styles */
}`);export class EditableListElement extends HTMLElement{canRemove=!0;canEdit=!1;#boundEventHandlers=new Map([['add',this.#addButton_onClick.bind(this)]]);componentParts=new Map();getPart(_){if(this.componentParts.get(_)==null){var b=this.shadowRoot.querySelector(`[part="${_}"]`);b!=null&&this.componentParts.set(_,b)}return this.componentParts.get(_)}findPart(B){return this.shadowRoot.querySelector(`[part="${B}"]`)}constructor(){super();this.attachShadow({mode:'open'});this.shadowRoot.innerHTML=d;this.shadowRoot.adoptedStyleSheets.push(e);this.addEventListener('click',C=>{let _b=C.composedPath().find(_a=>_a instanceof HTMLButtonElement);if(_b==null)return;let _c=_b.parentElement;var D=_b.getAttribute('part');if(D=='edit')this.dispatchEvent(new CustomEvent('edit', {detail:_c}));else D=='remove'&&(_c.remove(),this.dispatchEvent(new CustomEvent('remove', {detail:_c})))});this.findPart(EditableListPart.AddButton)?.addEventListener('click',this.#boundEventHandlers.get('add'));this.getPart(EditableListPart.ItemsSlot).addEventListener('slotchange',this.#updateItemButtons.bind(this))}static create(_A){var _B=document.createElement(f);if(_A==null)return _B;for(const[E,aA] of Object.entries(_A))if(E=='remove')(aA==!1)?_B.setAttribute(E,'false'):_B.removeAttribute(E);else if(E=='edit')(aA==!0)?_B.setAttribute(E,'true'):_B.removeAttribute(E);else if(E.startsWith('on')){var _C=E.substring(2).toLowerCase();_B.addEventListener(_C,aA)}return _B}#addButton_onClick(){this.dispatchEvent(new CustomEvent('add'))}#updateItemButtons(){var aB=this.getPart(EditableListPart.ItemsSlot).assignedElements();for(const[i,aE] of aB.entries()){if(c.has(aE.tagName.toLowerCase()))continue;else if(aE.tagName.toLowerCase()=='slot'){aB.push(...aE.assignedElements());continue}var aC=aB[i],aD=aB[i].querySelector(`button[part="${EditableListPart.EditButton}"]`);if(this.canEdit)if(aD==null){var _d=document.createElement('button');_d.type='button';_d.setAttribute('part','edit');var _e=this.querySelector(`template[part="${ButtonTemplatePart.EditButton}"]`);_e!=null?_d.append(_e.content.cloneNode(!0)):_d.textContent='…';aC.appendChild(_d)}else aD!=null&&aD.remove();var F=aB[i].querySelector(`button[part="${EditableListPart.RemoveButton}"]`);if(this.canRemove)if(F==null){var g=document.createElement('button');g.type='button';g.setAttribute('part','remove');const aF=this.querySelector(`template[part="${ButtonTemplatePart.RemoveButton}"]`);aF!=null?g.append(aF.content.cloneNode(!0)):g.textContent='×';aC.appendChild(g)}else F!=null&&F.remove()}}static observedAttributes=['remove','edit'];attributeChangedCallback(aG,aH,aI){if(aG=='remove'){aI==null||aI.trim()=='true'?this.canRemove=!0:this.canRemove=!1;this.#updateItemButtons()}else if(aG=='edit'){aI==null||aI.trim()!='true'?this.canEdit=!1:this.canEdit=!0;this.#updateItemButtons()}}}customElements.get(f)==null&&customElements.define(f,EditableListElement);
