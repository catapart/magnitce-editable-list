var u=(o=>(o.Items="items",o.AddButton="add",o.ItemsSlot="items-slot",o.EditButton="edit",o.RemoveButton="remove",o.Placeholder="placeholder",o))(u||{}),p=(e=>(e.RemoveButton="remove-button",e.EditButton="edit-button",e))(p||{}),h=new Set(["style","template"]),E=`<div id="items" part="items">
    <div id="placeholder" part="placeholder"></div>
    <slot id="items-slot" part="items-slot"></slot>
</div>
<slot name="add"><button id="add" part="add" type="button">&plus;</button></slot>`,v=`
* { box-sizing: border-box; }
:host
{
    /* begin default ul styles */
    display: block;
    list-style-type: disc;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    padding-inline-start: 40px;
    /* end default ul styles */
}
:host(:not(.empty)) #placeholder
{
    display: none;
}
`,c=new CSSStyleSheet;c.replaceSync(v);var r="editable-list",m=class extends HTMLElement{canRemove=!0;canEdit=!1;#e=new Map([["add",this.#s.bind(this)]]);findElement(s){return this.shadowRoot.getElementById(s)}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=E,this.shadowRoot.adoptedStyleSheets.push(c),this.addEventListener("click",e=>{let t=e.composedPath().find(l=>l instanceof HTMLButtonElement);if(t==null)return;let n=t.parentElement;if(t.classList.contains("edit")){let l=this.dispatchEvent(new CustomEvent("edit",{detail:n,bubbles:!0}));this.hasAttribute("cancel-edit")&&(e.preventDefault(),e.stopPropagation())}else t.classList.contains("remove")&&(this.dispatchEvent(new CustomEvent("remove",{detail:n,bubbles:!0,cancelable:!0}))==!0&&n.remove(),this.hasAttribute("cancel-remove")&&(e.preventDefault(),e.stopPropagation()))}),this.findElement("add")?.addEventListener("click",this.#e.get("add")),this.findElement("items-slot").addEventListener("slotchange",this.#t.bind(this)),this.findElement("items-slot").assignedElements().length==0?(this.classList.add("empty"),this.part.add("empty")):(this.classList.remove("empty"),this.part.remove("empty"))}#i(){let s=[...this.shadowRoot.querySelectorAll("[id]")];for(let t=0;t<s.length;t++)s[t].part.add(s[t].id);let e=[...this.shadowRoot.querySelectorAll("[class]")];for(let t=0;t<e.length;t++)e[t].part.add(...e[t].classList)}static create(s){let e=document.createElement(r);if(s==null)return e;for(let[t,n]of Object.entries(s))if(t=="remove")n==!1?e.setAttribute(t,"false"):e.removeAttribute(t);else if(t=="edit")n==!0?e.setAttribute(t,"true"):e.removeAttribute(t);else if(t.startsWith("on")){let l=t.substring(2).toLowerCase();e.addEventListener(l,n)}return e}#s(){this.dispatchEvent(new CustomEvent("add"))}#t(){let s=this.findElement("items-slot").assignedElements();s.length==0?(this.classList.add("empty"),this.part.add("empty")):(this.classList.remove("empty"),this.part.remove("empty"));for(let e=0;e<s.length;e++){let t=s[e];if(h.has(t.tagName.toLowerCase()))continue;if(t.tagName.toLowerCase()=="slot"){s.push(...t.assignedElements());continue}let n=s[e],l=s[e].querySelector("button.edit");if(this.canEdit){if(l==null){let i=document.createElement("button");i.type="button";let a=this.getAttribute("edit-class")?.trim()??"";i.classList.add("edit"),a!=""&&i.classList.add(...a.split(" ")),i.setAttribute("part",`edit${a!=""?` ${a}`:""}`);let d=this.querySelector('template[part="edit-button"]');d!=null?i.append(d.content.cloneNode(!0)):i.textContent="\u2026",n.appendChild(i)}}else l?.remove();let o=s[e].querySelector("button.remove");if(this.canRemove){if(o==null){let i=document.createElement("button");i.type="button";let a=this.getAttribute("remove-class")?.trim()??"";i.classList.add("remove"),a!=""&&i.classList.add(...a.split(" ")),i.setAttribute("part",`remove${a!=""?` ${a}`:""}`);let d=this.querySelector('template[part="remove-button"]');d!=null?i.append(d.content.cloneNode(!0)):i.textContent="\xD7",n.appendChild(i)}}else o?.remove()}}static observedAttributes=["remove","edit","placeholder"];attributeChangedCallback(s,e,t){s=="remove"?(t==null||t.trim()=="true"?this.canRemove=!0:this.canRemove=!1,this.#t()):s=="edit"?(t==null||t.trim()!="true"?this.canEdit=!1:this.canEdit=!0,this.#t()):s=="placeholder"&&(this.findElement("placeholder").textContent=t)}};customElements.get(r)==null&&customElements.define(r,m);export{p as ButtonTemplatePart,m as EditableListElement,u as EditableListPart};
