var u=(s=>(s.Items="items",s.AddButton="add",s.ItemsSlot="items-slot",s.EditButton="edit",s.RemoveButton="remove",s))(u||{}),c=(t=>(t.RemoveButton="remove-button",t.EditButton="edit-button",t))(c||{}),p=new Set(["style","template"]),h=`<div part="items">
    <div part="placeholder"></div>
    <slot part="items-slot"></slot>
</div>
<slot name="add"><button part="add" type="button">&plus;</button></slot>`,E=`
* { box-sizing: border-box; }
:host
{
    /* begin default ul styles */
    display: block;
    list-style-type: disc;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    padding-inline-start: 40px;
    /* end default ul styles */
}
:host(:not(.empty)) [part="placeholder"]
{
    display: none;
}
`,m=new CSSStyleSheet;m.replaceSync(E);var r="editable-list",d=class extends HTMLElement{canRemove=!0;canEdit=!1;#e=new Map([["add",this.#n.bind(this)]]);componentParts=new Map;getPart(e){if(this.componentParts.get(e)==null){let t=this.shadowRoot.querySelector(`[part="${e}"]`);t!=null&&this.componentParts.set(e,t)}return this.componentParts.get(e)}findPart(e){return this.shadowRoot.querySelector(`[part="${e}"]`)}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=h,this.shadowRoot.adoptedStyleSheets.push(m),this.addEventListener("click",t=>{let n=t.composedPath().find(l=>l instanceof HTMLButtonElement);if(n==null)return;let o=n.parentElement,s=n.getAttribute("part");if(s=="edit"){let l=this.dispatchEvent(new CustomEvent("edit",{detail:o,bubbles:!0}));this.hasAttribute("cancel-edit")&&(t.preventDefault(),t.stopPropagation())}else s=="remove"&&(this.dispatchEvent(new CustomEvent("remove",{detail:o,bubbles:!0,cancelable:!0}))==!0&&o.remove(),this.hasAttribute("cancel-remove")&&(t.preventDefault(),t.stopPropagation()))}),this.findPart("add")?.addEventListener("click",this.#e.get("add")),this.getPart("items-slot").addEventListener("slotchange",this.#t.bind(this)),this.getPart("items-slot").assignedElements().length==0?(this.classList.add("empty"),this.part.add("empty")):(this.classList.remove("empty"),this.part.remove("empty"))}static create(e){let t=document.createElement(r);if(e==null)return t;for(let[n,o]of Object.entries(e))if(n=="remove")o==!1?t.setAttribute(n,"false"):t.removeAttribute(n);else if(n=="edit")o==!0?t.setAttribute(n,"true"):t.removeAttribute(n);else if(n.startsWith("on")){let s=n.substring(2).toLowerCase();t.addEventListener(s,o)}return t}#n(){this.dispatchEvent(new CustomEvent("add"))}#t(){let e=this.getPart("items-slot").assignedElements();e.length==0?(this.classList.add("empty"),this.part.add("empty")):(this.classList.remove("empty"),this.part.remove("empty"));for(let t=0;t<e.length;t++){let n=e[t];if(p.has(n.tagName.toLowerCase()))continue;if(n.tagName.toLowerCase()=="slot"){e.push(...n.assignedElements());continue}let o=e[t],s=e[t].querySelector('button[part="edit"]');if(this.canEdit){if(s==null){let i=document.createElement("button");i.type="button",i.setAttribute("part","edit");let a=this.querySelector('template[part="edit-button"]');a!=null?i.append(a.content.cloneNode(!0)):i.textContent="\u2026",o.appendChild(i)}}else s?.remove();let l=e[t].querySelector('button[part="remove"]');if(this.canRemove){if(l==null){let i=document.createElement("button");i.type="button",i.setAttribute("part","remove");let a=this.querySelector('template[part="remove-button"]');a!=null?i.append(a.content.cloneNode(!0)):i.textContent="\xD7",o.appendChild(i)}}else l?.remove()}}static observedAttributes=["remove","edit","placeholder"];attributeChangedCallback(e,t,n){e=="remove"?(n==null||n.trim()=="true"?this.canRemove=!0:this.canRemove=!1,this.#t()):e=="edit"?(n==null||n.trim()!="true"?this.canEdit=!1:this.canEdit=!0,this.#t()):e=="placeholder"&&(this.findPart("placeholder").textContent=n)}};customElements.get(r)==null&&customElements.define(r,d);export{c as ButtonTemplatePart,d as EditableListElement,u as EditableListPart};
